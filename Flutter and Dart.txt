--------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------  
Installation

https://docs.flutter.dev/
--------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------  

1. Install Flutter according to documentation
2. Add Flutter to path
3. Install Android Studio and Android SDK manager from Ubuntu Software store
4.In android studio, From SDK manager >tools  Select cmd-line SDK and install it. Then accept the terms and conditions.
5.Add a new virtual device


Run Flutter on real device
https://www.youtube.com/watch?v=aohkII1C4JY&ab_channel=JohannesMilke
--------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------  
			Dart Programming
https://dartpad.dev/
---------------------------------------------------------------------------------------  ---------------------------------------------------------------------------------------  


Data types 
  1. String - use same quotation in entire program
  2. Num/Integer/Double
  3. Boolean
  4. Object (Everything is an object) [Given by var]
  
---------------------------------------------------------------------------------------  
  
void main()
{
  print("Hello World");
}


---------------------------------------------------------------------------------------
void main()
{
  int a;
  a = 65;

  print("The integer value is $a, $name");
  String name="Code warriors" ; 
  
  double d = 10.52;
  print("The float value is $d");
  
  num c = 1234;
  print("Value of c is $c");
    
  bool value= true;
  print(value);
}

---------------------------------------------------------------------------------------
void main()
{
  var a ;
  a = 10;
  print("Dynamic Variable decalration: $a");
  
   a = 10.55;
  print("Dynamic Variable decalration: $a");
  
  
  a = "Ghanashyam";
  print("Dynamic Variable decalration: $a");
  
} 
  
  
  Note: If we initialize variable while decalring, we cannot use it as dynamic variable anymore
---------------------------------------------------------------------------------------

Functions

---------------------------------------------------------------------------------------  
addofnum(int a,int b)
{
  return a+b;
}

void main()
{
  int a = 12;
  int b = 15;
  var total = addofnum(a,b);
  print(total);
}

---------------------------------------------------------------------------------------  
Operators

1. Arithmetic
2. Equality (Same as C language: == )
3. Increment and decrement (Post and pre-increment/decrement, Just like C language)
4. Logical

---------------------------------------------------------------------------------------  
Descision Making 

and 

Looping(for loop,for-in loop, while loop, do-while loop)

---------------------------------------------------------------------------------------  
addofnum(int a,int b)
{
  if (a<=b)
  {
    return a+b; 
  }
  else
  {
    return a-b;
  }
}

void main()
{
  int a = 12;
  int b = 15;
  var total = addofnum(a,b);
  print(total);
}

---------------------------------------------------------------------------------------  
void main()
{
 for (int i=0;i<=5;i++)
 {
   print("Hello $i");
 }
}


--------------------------------------------------------------------------------------  
Comments
1.Single Line Comments ( // )
2.Multiline Comments (/*        */)
3.Documentatin Comment (  ///     )
--------------------------------------------------------------------------------------  

Continue and Break

--------------------------------------------------------------------------------------  
void main()
{
 for (int i=0;i<=5;i++)
 {
   if(i==5)
   {
     print("Hello $i");
   }
   else
   {
     continue;
     print("This will Not be printed");
   }
 }
}
--------------------------------------------------------------------------------------  
void main()
{
 for (int i=0;i<=5;i++)
 {
   if(i==4)
   {
    break;
   }
   else
   {
      print("Hello $i");
   }
}
}

--------------------------------------------------------------------------------------  Final and Constant

These are used to declare that the value of the variable should not be changed.
If we try to change the value of these variables, it will show error

example:

final var a = 5;


--------------------------------------------------------------------------------------
Object Oriented Programing


obejct is an entity which has state and behaviour.
It can be physical or conceptual.

Every value in the Dart is an object.
--------------------------------------------------------------------------------------  
Class : Class is a collection of object. Every object is created using class.
Class consists of:
-Fields
-Methods
-Constructor
-Getter
-Setter

--------------------------------------------------------------------------------------  
class CarClass{ //Use camel casing for class name
  late String color,brand; //late means it will be initialized later
  
  String method()
  {
    return "Method is Called";
  }
}

void main()
{
  var myobj = new CarClass();
  myobj.color = "red";
  myobj.brand = "bugati";
  print(myobj.color);
  print(myobj.brand);
  print(myobj.method());
}

--------------------------------------------------------------------------------------  
App Developement - Create Virtual device using devise manager / use chrome debugger
--------------------------------------------------------------------------------------  

Every Element is a widget

1. State Management
	2 Types of widget
	-Stateless widget (No User interaction)
	-Stateful widget (There is user interaction)

2. MaterialApp
Design is provided by MaterialApp

3. Scaffold
Base of the app is scaffold

--------------------------------------------------------------------------------------  
4. Dart
-------------------------------------------------------------------------------------- 
Container widget - This seperates the container with other containers / other widgets [Similar to Div tag in Web developement]
-------------------------------------------------------------------------------------- 
5.Dart
-------------------------------------------------------------------------------------- 

Row and Column wigit
This helps the developer to to align children in row and columns.

Row widget - Children are aligned along the horizontal direction. 

Column widget - Column will be having children along vertical direction.


Rows and Column can have multiple children unlike other widgets we have seen already 

Disadvantage : Doesn't support horiztontal scrolling

We can poisition the children using different properties
-mainAxisAignment
	-For Row, this is horizontal position
	-For Column, this is vertical position
-crossAxisAlignment
	-For Row this is horizontal position
	-For Column this is vertical position
	
-mainAxisSize
-------------------------------------------------------------------------------------- 
6.dart
-------------------------------------------------------------------------------------- 
More about Text Widget

Text()
RichText()
TextField()
-------------------------------------------------------------------------------------- 
7.dart
-------------------------------------------------------------------------------------- 
Mini Project

8_MiniProject1.dart
--------------------------------------------------------------------------------------
Button Widget

There are different types of buttons provided by the flutter

Flat Button
Text Button
Raised button
Elevated Button
Floating Action Button
FloatingActionButton.extended()
Drop Down Button
Inkwell Button
Icon Button
Pop Up Menu Button
--------------------------------------------------------------------------------------
9.dart
--------------------------------------------------------------------------------------
Stack Widget - Used for overlaping

Stack contains list of widget, which are positioned one top of the other.
This allows developers to overlap myltiple widget to single screen and render them from bottom to top.
First widget is bottom most iteam and last widget is top most iteam.
If we want to reorder the widget, we have to rebuild the stack.
By default, 1st widget has minimum size compared to other widget of the stack.

Key points:
-The child widget in the stack can be either positioned or non-positioned.
-Positioned iteams are wrapped in position widget and must have atleast 1 non-null property.
-Non-positioned widget aligns itself. It is displayed on the screen based on stack alignment.
	-Default position of the children is top-left corner
	-We can use alignment attribute to change the alignment of the widget.
--------------------------------------------------------------------------------------
10.dart
--------------------------------------------------------------------------------------
Form Widget

We can easily create a form to get details from the user.
We have to pass a global key to extract unique details of user for validation purposes.
--------------------------------------------------------------------------------------
11.dart
--------------------------------------------------------------------------------------
Icons Widget
Icons are used to reprasent a graphical image
Properties
-Color
-Size
-Direction of text we specify

--------------------------------------------------------------------------------------
12.dart
--------------------------------------------------------------------------------------
Image Widget 

This is used to display images in flutter

An app consists of both code and asset resources
Asset is something which is bundled with the app and is accessible at runtime.
Asset can include static data, config file, Icons and images.
Flutter support different image formats like: jpg, webpng, gif, animated gif, bmp and wbmp.

Create a new directory -> paste images in that directory ->add path of directory in pubspec.yaml file (Uncomment asset section and add the file path) -> run $flutter pub get command in the terminal

Take following into consideration while adding path in pubspec.yaml file
//Just add relative folder name in pubspec.yaml file end with /


https://stackoverflow.com/questions/59657146/getting-no-file-or-variants-found-for-asset-found-error-on-my-asset

Then use Image.asset(file_path) to display image


---->> Getting Error Unable to load asset: /images/1.jpg/
Tried this : https://www.flutterbeads.com/unable-to-load-asset-in-flutter/
Solved:
//Giving relative path was giving error. Give absolute path

Image can directly be loaded from internet using 
Image.network() widget.
//FadeInImage functions can be used to give placeholder. If the image is taking time to load, a alternate image will be displayed in the place of image.

--------------------------------------------------------------------------------------
Card widget

border On Foreground
Color - To give background color
elevation - To gove shadow below the card
margin - Used to customize space outside the card
shape
shadowcolor
--------------------------------------------------------------------------------------
14.dart
--------------------------------------------------------------------------------------
Drawer and tapbar
Properties provided by scafflod widget

Drawer is an invisble side screen, sliding left menu that generally contains importemt links in the application and occupies half of the screen when displayed.

Tab-bar can be at bottom or top. We can have icons in tabbar and manipulate screen by clicking on the icons.
(Like for sign in and signup window / or to navigate to different sections like in facebook)
--------------------------------------------------------------------------------------
15.dart
--------------------------------------------------------------------------------------
ALert Dialogue Widget

Used to display alert / or confirm any action of the user.
Can be displayed at the top or at the center of the screen.

Features:

title
content
content-padding
action property - we can create buttons to interact
shape

4 types of alert dialogue widget
-Basic Alert Dialogue widget
-TextFild inside it
-Confirmation Dialogue widget 
-Select Dialogue widget
--------------------------------------------------------------------------------------
16.dart
--------------------------------------------------------------------------------------

List widget

-Basic List
-Long list
-Grid List
-Horizontal List

--------------------------------------------------------------------------------------
17.dart
--------------------------------------------------------------------------------------
Mini Project 2 : Calculator app

18.dart
--------------------------------------------------------------------------------------
Gridview and Toast 
Gridview - Scrollable 2D array of widget

count - Normal Gridview with childre provided manually or can be created using list generator under children property
builder - When provinding list of data, instead of seperately using list generator method, we can directly use grid builder
custom 
extent - When we want to span over maximum cross axis space

Toast - It is used to show notification. It is like container with minimum height and widhth

To import external packages, visit https://pub.dev/ to get required package and specify it in pubspec.yaml. 
Update the "dependencies" in the pubspec.yaml -> add version of package. Then import the package in the dart file.

Different properties of toast: 
Message
Toast length - Message length
Gravity -Where the message to be displayed
Time in seconds
Background color
Text color
Font size

--------------------------------------------------------------------------------------
19.dart
--------------------------------------------------------------------------------------
Checkbox and radio Buttons

--------------------------------------------------------------------------------------
20.dart
--------------------------------------------------------------------------------------
Progress Bar and Snack Bar
Progress Bar is displayed to show the current progress of some action
-Linear Progres Bar
-Circular progress bar

Snack Bar is used to display some short messages like Toast

--------------------------------------------------------------------------------------
21.dart
--------------------------------------------------------------------------------------

Tooltip and Slider
Tooltip is a materialdesign widget, which lets the user know the functionality of the button on UI widget
When a widget is equipped under tool tip, when the butotn is long pressed, the functionalities will be visible in a floating tooltip

Slider- Material design widget used to store particular value. We can change the value by dragging the slider


Now to create image swiper, add package called "Flutter Swiper"

//Had trouble running code related to flutter swiper. 
Error : https://dart.dev/null-safety/unsound-null-safety //No suppoting device found

--------------------------------------------------------------------------------------
22.dart
--------------------------------------------------------------------------------------

Table and Switch

--------------------------------------------------------------------------------------
23.dart
--------------------------------------------------------------------------------------
Calender Widget

-Table Calender Widget - Install it in pubespec.yaml file
 Customizable, animation, gesture handling, different format, automatic height adjustment
 
 //All the functionalites have been changed since the tutorial - Study online 
--------------------------------------------------------------------------------------
24.dart
--------------------------------------------------------------------------------------
Navigation and Routing

Method 1
Navigation.push() and Navigation.pop()

Method 2
named route method- We have to specify the route inorder to nevigate
--------------------------------------------------------------------------------------
25.dart
--------------------------------------------------------------------------------------
Splash Screen/Launch Screen

It is main page of the app, which contains introduction to app

Method 1 - Timer method

Method 2 - Package method


--------------------------------------------------------------------------------------
26.dart
--------------------------------------------------------------------------------------

Signup With Firebase

-Create a Signup page
-Create new firbase account in Firebase console
-Connect the app with firebase 
-Copy Application  id from Android/app/src/build.gradle to paste it in Firebase project
-Copy SHA certificate fingerprint of android studio from gradle menu of new android project
-Download the google-service.json file and add it to "android" folder

-In app level gradle file add

defaultConfig{
 // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.hello_world"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        multiDexEnabled  true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:multidex-instrumentation:1.0.3"
}

apply plugin:  'com.google.gms.google-services'


-In android level gradle file, add

 dependencies {
        classpath 'com.android.tools.build:gradle:7.1.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.gms:google-services:4.3.13"
    }
    
- Add two packages in pubsepc.yaml file and import them
firebase_auth: ^3.4.2
firebase_core: ^1.19.2    



firebase logout
firebase login --no-localhost
flutterfire configure


HAVING ERROR INITIALIZING FIREBASE IN VOID MAIN
https://stackoverflow.com/questions/70232931/firebaseoptions-cannot-be-null-when-creating-the-default-app

HAVING PROBLEM WITH LOGGING IN FIREBASE CLI
https://stackoverflow.com/questions/37526358/firebase-login-failed
https://firebase.flutter.dev/docs/cli/

--------------------------------------------------------------------------------------
27.dart
--------------------------------------------------------------------------------------

Signin with firebase


--------------------------------------------------------------------------------------
28.dart
--------------------------------------------------------------------------------------

Database

Flutter provides 2 types of databases, we can create and manage databases by importing certain packages

-sqflite plugin for  SQLite database =>
*Light weight, time tested, severless, self contained, zero config, transactional SQL database
*It can execute sql statements easily.
*Advanced query methods to get info from database

-Firebase database => This is provided by google. We can use different features of firebase database.
*NoSQL database
2 different database in firebase are
*Cloud Firestore - deals with the collection property
			- Each collection can have sub-collections
*Realtime Database - This deals with json
--------------------------------------------------------------------------------------
--No Code Files--
--------------------------------------------------------------------------------------
Final Project - Age Calculator App

30.dart/Age_Calculator
--------------------------------------------------------------------------------------
Run project without null safety
flutter run --no-sound-null-safety

Build Flutter APK
https://www.youtube.com/watch?v=qSn68_WLRKc&ab_channel=DashtoDartlang

flutter clean
flutter build apk --no-sound-null-safety


Setup Physical Debugger
https://developer.android.com/studio/debug/dev-options

Change App name and Icon
https://www.youtube.com/watch?v=eMHbgIgJyUQ&ab_channel=JohannesMilke


