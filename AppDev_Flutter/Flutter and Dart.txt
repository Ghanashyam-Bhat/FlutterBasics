--------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------  
Installation

https://docs.flutter.dev/
--------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------  

1. Install Flutter according to documentation
2. Add Flutter to path
3. Install Android Studio and Android SDK manager from Ubuntu Software store
4.In android studio, From SDK manager >tools  Select cmd-line SDK and install it. Then accept the terms and conditions.
5.Add a new virtual device


Run Flutter on real device
https://www.youtube.com/watch?v=aohkII1C4JY&ab_channel=JohannesMilke
--------------------------------------------------------------------------------------  
--------------------------------------------------------------------------------------  
			Dart Programming
https://dartpad.dev/
---------------------------------------------------------------------------------------  ---------------------------------------------------------------------------------------  


Data types 
  1. String - use same quotation in entire program
  2. Num/Integer/Double
  3. Boolean
  4. Object (Everything is an object) [Given by var]
  
---------------------------------------------------------------------------------------  
  
void main()
{
  print("Hello World");
}


---------------------------------------------------------------------------------------
void main()
{
  int a;
  a = 65;

  print("The integer value is $a, $name");
  String name="Code warriors" ; 
  
  double d = 10.52;
  print("The float value is $d");
  
  num c = 1234;
  print("Value of c is $c");
    
  bool value= true;
  print(value);
}

---------------------------------------------------------------------------------------
void main()
{
  var a ;
  a = 10;
  print("Dynamic Variable decalration: $a");
  
   a = 10.55;
  print("Dynamic Variable decalration: $a");
  
  
  a = "Ghanashyam";
  print("Dynamic Variable decalration: $a");
  
} 
  
  
  Note: If we initialize variable while decalring, we cannot use it as dynamic variable anymore
---------------------------------------------------------------------------------------

Functions

---------------------------------------------------------------------------------------  
addofnum(int a,int b)
{
  return a+b;
}

void main()
{
  int a = 12;
  int b = 15;
  var total = addofnum(a,b);
  print(total);
}

---------------------------------------------------------------------------------------  
Operators

1. Arithmetic
2. Equality (Same as C language: == )
3. Increment and decrement (Post and pre-increment/decrement, Just like C language)
4. Logical

---------------------------------------------------------------------------------------  
Descision Making 

and 

Looping(for loop,for-in loop, while loop, do-while loop)

---------------------------------------------------------------------------------------  
addofnum(int a,int b)
{
  if (a<=b)
  {
    return a+b; 
  }
  else
  {
    return a-b;
  }
}

void main()
{
  int a = 12;
  int b = 15;
  var total = addofnum(a,b);
  print(total);
}

---------------------------------------------------------------------------------------  
void main()
{
 for (int i=0;i<=5;i++)
 {
   print("Hello $i");
 }
}


--------------------------------------------------------------------------------------  
Comments
1.Single Line Comments ( // )
2.Multiline Comments (/*        */)
3.Documentatin Comment (  ///     )
--------------------------------------------------------------------------------------  

Continue and Break

--------------------------------------------------------------------------------------  
void main()
{
 for (int i=0;i<=5;i++)
 {
   if(i==5)
   {
     print("Hello $i");
   }
   else
   {
     continue;
     print("This will Not be printed");
   }
 }
}
--------------------------------------------------------------------------------------  
void main()
{
 for (int i=0;i<=5;i++)
 {
   if(i==4)
   {
    break;
   }
   else
   {
      print("Hello $i");
   }
}
}

--------------------------------------------------------------------------------------  Final and Constant

These are used to declare that the value of the variable should not be changed.
If we try to change the value of these variables, it will show error

example:

final var a = 5;


--------------------------------------------------------------------------------------
Object Oriented Programing


obejct is an entity which has state and behaviour.
It can be physical or conceptual.

Every value in the Dart is an object.
--------------------------------------------------------------------------------------  
Class : Class is a collection of object. Every object is created using class.
Class consists of:
-Fields
-Methods
-Constructor
-Getter
-Setter

--------------------------------------------------------------------------------------  
class CarClass{ //Use camel casing for class name
  late String color,brand; //late means it will be initialized later
  
  String method()
  {
    return "Method is Called";
  }
}

void main()
{
  var myobj = new CarClass();
  myobj.color = "red";
  myobj.brand = "bugati";
  print(myobj.color);
  print(myobj.brand);
  print(myobj.method());
}

--------------------------------------------------------------------------------------  
App Developement - Create Virtual device using devise manager / use chrome debugger
--------------------------------------------------------------------------------------  

Every Element is a widget

1. State Management
	2 Types of widget
	-Stateless widget (No User interaction)
	-Stateful widget (There is user interaction)

2. MaterialApp
Design is provided by MaterialApp

3. Scaffold
Base of the app is scaffold

--------------------------------------------------------------------------------------  
4. Dart
-------------------------------------------------------------------------------------- 
Container widget - This seperates the container with other containers / other widgets [Similar to Div tag in Web developement]
-------------------------------------------------------------------------------------- 
5.Dart
-------------------------------------------------------------------------------------- 

Row and Column wigit
This helps the developer to to align children in row and columns.

Row widget - Children are aligned along the horizontal direction. 

Column widget - Column will be having children along vertical direction.


Rows and Column can have multiple children unlike other widgets we have seen already 

Disadvantage : Doesn't support horiztontal scrolling

We can poisition the children using different properties
-mainAxisAignment
	-For Row, this is horizontal position
	-For Column, this is vertical position
-crossAxisAlignment
	-For Row this is horizontal position
	-For Column this is vertical position
	
-mainAxisSize
-------------------------------------------------------------------------------------- 
6.dart
-------------------------------------------------------------------------------------- 
More about Text Widget

Text()
RichText()
TextField()
-------------------------------------------------------------------------------------- 
7.dart
-------------------------------------------------------------------------------------- 
Mini Project

8_MiniProject1.dart
--------------------------------------------------------------------------------------
Button Widget

There are different types of buttons provided by the flutter

Flat Button
Text Button
Raised button
Elevated Button
Floating Action Button
FloatingActionButton.extended()
Drop Down Button
Inkwell Button
Icon Button
Pop Up Menu Button
--------------------------------------------------------------------------------------
9.dart
--------------------------------------------------------------------------------------
Stack Widget - Used for overlaping

Stack contains list of widget, which are positioned one top of the other.
This allows developers to overlap myltiple widget to single screen and render them from bottom to top.
First widget is bottom most iteam and last widget is top most iteam.
If we want to reorder the widget, we have to rebuild the stack.
By default, 1st widget has minimum size compared to other widget of the stack.

Key points:
-The child widget in the stack can be either positioned or non-positioned.
-Positioned iteams are wrapped in position widget and must have atleast 1 non-null property.
-Non-positioned widget aligns itself. It is displayed on the screen based on stack alignment.
	-Default position of the children is top-left corner
	-We can use alignment attribute to change the alignment of the widget.
--------------------------------------------------------------------------------------
10.dart
--------------------------------------------------------------------------------------
Form Widget

We can easily create a form to get details from the user.
We have to pass a global key to extract unique details of user for validation purposes.
--------------------------------------------------------------------------------------

